<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<sub-flow name="impl-get-catalog" doc:id="57b793fb-d388-4a0c-b344-4dfc32ad6665" >
		<logger level="INFO" doc:name="INFO START" doc:id="516010e7-7006-482e-b93d-34c8b5f53aa3" message="impl-get-catalog::START"/>
		<db:select doc:name="Select CATALOG" doc:id="00c67dc9-448a-44b6-bfaf-b277588e4466" config-ref="mysql-config">
			<db:sql ><![CDATA[SELECT ALBUM.TITLE AS ALBUM_NM, ALBUM.PUBLICATION_DT AS ALBUM_PUBLISH,
	   SONG.SONG_TITLE, SONG.GENRE AS SONG_GENRE, SONG.DURATION AS SONG_DURATION, 
       ARTIST.GROUP_NM, ARTIST.LAST_NM AS ARTIST_LAST, ARTIST.FIRST_NM AS ARTIST_FIRST, DATE_FORMAT(ARTIST.BIRTH_DATE, "%Y-%m-%d") AS ARTIST_BIRTH, ifnull(ARTIST.DEATH_DATE,"") AS ARTIST_DEATH
	FROM BC_ALBUM ALBUM
        LEFT OUTER JOIN BC_ARTIST ARTIST 
          ON ALBUM.GROUP_NM = ARTIST.GROUP_NM
        LEFT OUTER JOIN BC_SONG SONG 
          ON SONG.ARTIST_NM = ARTIST.GROUP_NM
      WHERE ARTIST.GROUP_NM LIKE :groupName
      GROUP BY ALBUM_NM, SONG_TITLE, ARTIST_LAST	
      ORDER BY ALBUM_NM, SONG_TITLE, ARTIST_LAST]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	groupName: attributes.queryParams.groupName ++ "%"
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="payload" doc:id="2f822187-6260-48a3-86b1-3825fcf740e5" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var catalogQuery = payload
fun formatDate(d: Date) = d as String {format: "MM/dd/YYYY"}
---
{
   "albums": (catalogQuery groupBy $.ALBUM_NM mapObject(albumsGroup, agKey) ->(
        "album": {
           "albumTitle":       agKey,
           "publicationDate":  formatDate(albumsGroup.ALBUM_PUBLISH[0]),
           "groupName":        albumsGroup.GROUP_NM[0],
           "songs": (albumsGroup groupBy $.SONG_TITLE mapObject (songsGroup, sgKey) ->(
               "song": {
                   "songTitle":    sgKey,
                   "genre":        songsGroup.SONG_GENRE[0],
                   "songDuration": songsGroup.SONG_DURATION[0],
                   "songWriters": (songsGroup groupBy $.ARTIST_LAST mapObject (artistsGroup, agKey)->
                    (
                        "writer": {
                            "writer": artistsGroup.ARTIST_FIRST[0] ++ " " ++ artistsGroup.ARTIST_LAST[0],
                            "lifeDates": (if (artistsGroup.ARTIST_DEATH[0] != "")
                                ("lifeDates": formatDate(artistsGroup.ARTIST_BIRTH[0]) ++ "-" ++                                                    formatDate(artistsGroup.ARTIST_DEATH[0])) 
                                else "lifeDates":  formatDate(artistsGroup.ARTIST_BIRTH[0]))
                        }
                    )).*writer orderBy $.writer
               }
           )).*song orderBy $.songTitle   
        }
    )).*album orderBy $.publicationDate
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
</mule>
